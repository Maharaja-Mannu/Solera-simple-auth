{"version":3,"sources":["actionTypes.js","api.js","component/Header.js","component/customInput.js","component/validationSchema.js","component/Login.js","component/Register.js","reducer.js","component/NoMatch.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_SUCCESS","login","values","a","fetch","Request","method","headers","body","JSON","stringify","response","ok","json","result","Error","register","text","errMsg","logout","token","Header","state","dispatch","React","useState","isLoading","setIsLoading","handleLogout","type","console","log","message","Navbar","bg","variant","expand","Container","Brand","as","NavLink","to","Toggle","aria-controls","Collapse","id","Nav","className","isLoggedIn","Link","user","name","Button","onClick","disabled","Input","label","helpText","props","useField","field","meta","Form","Group","Label","htmlFor","Control","isInvalid","touched","error","Feedback","Text","registerValidationSchema","object","shape","string","max","required","username","email","password","min","cnfpwd","oneOf","ref","loginValidationSchema","Login","err","setErr","history","useHistory","handleLogin","payload","localStorage","setItem","push","style","maxWidth","Alert","Heading","initialValues","validationSchema","onSubmit","handleSubmit","isSubmitting","noValidate","placeholder","autoComplete","Register","handleRegister","pwd","reducer","action","NoMatch","App","useReducer","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5638bd24.chunk.js","sourcesContent":["export const LOGIN_INIT = 'LOGIN_INIT';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\r\nexport const LOGOUT_INIT = 'LOGOUT_INIT'\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE'","const baseUrl=\"\";\r\nexport const login = async (values) => {\r\n    const response = await fetch(new Request(`${baseUrl}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(values, null, 2)\r\n    }))\r\n    if (response.ok) {\r\n        const result = await response.json()\r\n        return result\r\n    }\r\n    // const errMsg = await response.text()\r\n    throw new Error(\"Invalid username or password\")\r\n}\r\n\r\nexport const register = async (values) => {\r\n    const response = await fetch(new Request(`${baseUrl}/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(values, null, 2)\r\n    }))\r\n    if (response.ok) {\r\n        const result = await response.json()\r\n        return result\r\n    }\r\n    const errMsg = await response.text()\r\n    throw new Error(errMsg)\r\n}\r\n\r\nexport const logout = async (token) => {\r\n    const response = await fetch(new Request(`${baseUrl}/logout`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        },\r\n    }))\r\n    if (response.ok) {\r\n        const result = await response.text()\r\n        return result\r\n    }\r\n    const errMsg = await response.text()\r\n    throw new Error(errMsg)\r\n}\r\n","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {NavLink} from 'react-router-dom'\r\nimport { LOGOUT_SUCCESS} from '../actionTypes'\r\nimport {logout} from '../api'\r\n\r\nfunction Header({state, dispatch}) {\r\n    const [isLoading, setIsLoading] = React.useState(false)\r\n\r\n    // console.log(state)\r\n    const handleLogout = async () => {\r\n        setIsLoading(true)\r\n        try {\r\n            await logout(state.token)\r\n            dispatch({ type: LOGOUT_SUCCESS})\r\n            setIsLoading(false)\r\n        } catch (error) {\r\n            console.log(error.message)\r\n            setIsLoading(false)\r\n        }\r\n\r\n    }\r\n    return(\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand as={NavLink} to=\"/\">Solera</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            {state.isLoggedIn ? \r\n                            <>\r\n                                <Nav.Link as={NavLink} to=\"/\">{state.user.name}</Nav.Link>\r\n                                <Button onClick={handleLogout} variant=\"outline-light\" disabled={isLoading}>{isLoading ? 'Loading...': 'Logout'}</Button>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Nav.Link as={NavLink} to=\"/login\">Login</Nav.Link>\r\n                                <Nav.Link as={NavLink} to=\"/register\">Register</Nav.Link>\r\n                            </>\r\n                            }\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\nexport default Header","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useField } from 'formik'\r\n\r\nexport const Input = ({ label, helpText, ...props }) => {\r\n    const [field, meta] = useField(props.name)\r\n    return (\r\n        <Form.Group>\r\n            <Form.Label htmlFor={props.id || props.name}>{label}</Form.Label>\r\n            <Form.Control {...field} {...props} isInvalid={meta.touched && meta.error} />\r\n            <Form.Control.Feedback type='invalid'>{meta.error}</Form.Control.Feedback>\r\n            { helpText && <Form.Text className=\"text-muted\">{helpText}</Form.Text> }\r\n        </Form.Group>\r\n    )\r\n\r\n}\r\n\r\nexport const CheckInput = (props) => {\r\n    const [field] = useField(props.name);\r\n    return (\r\n        <Form.Check {...field} {...props} defaultChecked={field.value === props.value ? true : false} />\r\n    );\r\n};\r\n","import { string, object, ref } from 'yup'\r\n\r\nexport const registerValidationSchema = object().shape({\r\n    name: string().max(20).required('Required'),\r\n    username: string().email().required('Required'),\r\n    password: string().min(8, 'Password must be atleast 8 character').required('Required'),\r\n    cnfpwd: string().oneOf([ref('password'), null], 'Password must match').required('Required'),\r\n})\r\n\r\n\r\nexport const loginValidationSchema = object().shape({\r\n    username: string().email().required('Required'),\r\n    password: string().required('Required')\r\n})","import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Formik } from 'formik'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { Input } from './customInput'\r\nimport {login } from '../api'\r\nimport { LOGIN_SUCCESS, LOGIN_FAILURE } from '../actionTypes'\r\nimport {loginValidationSchema} from './validationSchema'\r\n\r\nexport default function Login({state, dispatch}) {\r\n    const [err, setErr] = React.useState(null)\r\n    let history = useHistory()\r\n    const handleLogin = async (values) => {\r\n        setErr(null)\r\n        try {\r\n            const result = await login(values)\r\n            dispatch({ type: LOGIN_SUCCESS, payload: result })\r\n            localStorage.setItem('token', result.token)\r\n            localStorage.setItem('user', result.user.name)\r\n            history.push('/')\r\n        } catch (error) {\r\n            dispatch({ type: LOGIN_FAILURE})\r\n            setErr(error.message)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Container className=\"pt-4\">\r\n            <div className=\"m-auto\" style={{maxWidth: \"360px\"}}>\r\n                {err && \r\n                <Alert variant=\"danger\">\r\n                    <Alert.Heading>Error!</Alert.Heading>\r\n                    <p>{err}</p>\r\n                </Alert>\r\n                }\r\n\r\n                <h2>Login</h2>\r\n                <Formik\r\n                    initialValues={{\r\n                        username: '',\r\n                        password: '',\r\n                    }}\r\n                    validationSchema={loginValidationSchema}\r\n                    onSubmit={handleLogin}\r\n                >\r\n                    {({ handleSubmit, isSubmitting }) => (\r\n\r\n                        <Form noValidate onSubmit={handleSubmit}>\r\n                            <Input \r\n                                label=\"Email address\"\r\n                                name=\"username\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                autoComplete=\"username\"\r\n                                helpText=\"We'll never share your email with anyone else.\"\r\n                            />\r\n                            <Input\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Enter password\"\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                            \r\n                            {/* <CheckInput type=\"checkbox\" label=\"Check me out\" name=\"remember\" /> */}\r\n                    \r\n                            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n                                {isSubmitting ? 'Loading...' : 'Submit'}\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n            \r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Container from 'react-bootstrap/Container'\r\nimport {Formik } from 'formik'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Input} from './customInput'\r\nimport {register} from '../api'\r\nimport {LOGIN_SUCCESS, LOGIN_FAILURE} from '../actionTypes'\r\nimport {registerValidationSchema} from './validationSchema'\r\n\r\nfunction Register({dispatch}) {\r\n\r\n    const [err, setErr] = React.useState(null)\r\n    const history = useHistory()\r\n\r\n    const handleRegister = async (values) => {\r\n        setErr(null)\r\n        try {\r\n            const result = await register(values)\r\n            dispatch({ type: LOGIN_SUCCESS, payload: result })\r\n            localStorage.setItem('token', result.token)\r\n            localStorage.setItem('user', result.user.name)\r\n            history.push('/')\r\n        } catch (error) {\r\n            dispatch({ type: LOGIN_FAILURE})\r\n            setErr(error.message)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Container className=\"mt-4\">\r\n            <div className=\"m-auto\" style={{maxWidth: '360px'}}>\r\n                {err &&\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading>Error!</Alert.Heading>\r\n                        <p>{err}</p>\r\n                    </Alert>\r\n                }\r\n                <h3>Register</h3>\r\n                <Formik\r\n                    initialValues={{\r\n                        name: '',\r\n                        username: '',\r\n                        pwd: '',\r\n                        cnfpwd: ''\r\n\r\n                    }}\r\n                    validationSchema={registerValidationSchema}\r\n                    onSubmit={handleRegister}\r\n                    >\r\n                    {({handleSubmit, isSubmitting}) => (\r\n                        \r\n                        <Form noValidate onSubmit={handleSubmit}>\r\n                            <Input label=\"Name\" type=\"text\" name=\"name\" placeholder=\"Enter Name\" />\r\n                            <Input label=\"Email address\" type=\"email\" name=\"username\"\r\n                                placeholder=\"Enter email\" autoComplete=\"username\" \r\n                                helpText=\"We'll never share your email with anyone else.\" />\r\n                            <Input label=\"Password\" type=\"password\" name=\"password\"\r\n                                placeholder=\"Enter password\" autoComplete=\"new-password\" />\r\n                            <Input label=\"Confirm password\" type=\"password\" name=\"cnfpwd\" \r\n                                placeholder=\"Re-enter Password\" autoComplete=\"new-password\" />\r\n                            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n                                {isSubmitting ? 'Loading...' : 'Register'}\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n\r\n                </Formik>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register","import { LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT_SUCCESS } from './actionTypes'\r\n\r\nexport default function reducer(state, action) {\r\n    switch (action.type) {\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: action.payload.user,\r\n                token: action.payload.token\r\n            }\r\n        case LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n                token: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nexport default function NoMatch() {\r\n    return (\r\n        <Container className=\"text-center pt-4\">\r\n            <h3>404 - Page Not Found</h3>\r\n            <p>The page is missing.</p>\r\n        </Container>\r\n    )   \r\n}","import React from 'react'\nimport {BrowserRouter as Router ,Switch, Route } from 'react-router-dom'\nimport Header from './component/Header'\nimport Login from './component/Login'\nimport Register from './component/Register'\nimport './App.css';\nimport reducer from './reducer'\nimport NoMatch from './component/NoMatch'\n\nfunction App() {\n  const initialValues ={\n    isLoading: false,\n    isLoggedIn: false,\n    user: '',\n    token: null\n  }\n  const [state, dispatch] = React.useReducer(reducer, initialValues)\n\n  return (\n    <Router>\n      <Header state={state} dispatch={dispatch}/>\n      <Switch>\n          <Route exact path=\"/\">\n            <h2 className=\"text-center pt-4\">Welcome to Solera Life Science Private Limited</h2>\n            {state.user && <h4 className=\"text-center\">{state.user.name}</h4>}\n          </Route>\n          <Route exact path=\"/login\">\n            <Login dispatch={dispatch}/>\n          </Route>\n          <Route exact path=\"/register\">\n            <Register dispatch={dispatch}/>\n          </Route>\n          <Route exact path=\"*\">\n            <NoMatch/>\n          </Route>\n      </Switch>\n    </Router>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}